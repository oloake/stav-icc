/*
 * Generated by the Mule project wizard. http://mule.mulesoft.org
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */
package com.rplp.icc.authorization.authservice;

import static org.junit.Assert.assertEquals;

import java.io.FileInputStream;
import java.util.Properties;

import org.junit.BeforeClass;
import org.junit.Test;
import org.mule.tck.junit4.FunctionalTestCase;

import com.eviware.soapui.impl.wsdl.WsdlProject;
import com.meterware.httpunit.GetMethodWebRequest;
import com.meterware.httpunit.WebConversation;
import com.meterware.httpunit.WebRequest;
import com.meterware.httpunit.WebResponse;

public class AuthServiceTestCase extends FunctionalTestCase {

	private static Properties properties;

	@Override
	protected String getConfigResources() {
		return "src/main/app/mule-config.xml";
	}

	@BeforeClass
	public static void initialize() throws Exception {

		properties = new Properties();
		properties.load(new FileInputStream(
				"src/main/resources/authorization-app.properties"));

		startSoapUIMockService();
	}

	//TODO: test something more useful...
	@Test
	public void testOkResponse() throws Exception {

		WebConversation wc = new WebConversation();

		WebRequest request = new GetMethodWebRequest(properties.getProperty("authorization.service.inbound.address") + "/person/123");
		
		WebResponse response = wc.getResponse(request);

		System.out.println(response.getText());
		System.out.println(response.getResponseMessage());
		
		assertEquals(200, response.getResponseCode());
		
	}

	public static void startSoapUIMockService() throws Exception {

		WsdlProject project = new WsdlProject(
				"src/test/resources/soapui/Rolle-soapui-project.xml");

		project.getMockServiceByName(
				"RolleServiceSoapBinding MockService").start();

	}

}
