<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns:jetty="http://www.mulesoft.org/schema/mule/jetty"
	xmlns:jetty-ssl="http://www.mulesoft.org/schema/mule/jetty-ssl"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns:client="http://www.mulesoft.org/schema/mule/client"
	xmlns:management="http://www.mulesoft.org/schema/mule/management"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:mule-xml="http://www.mulesoft.org/schema/mule/xml" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.3/mule.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.3/mule-http.xsd
        http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/3.3/mule-https.xsd
        http://www.mulesoft.org/schema/mule/jetty http://www.mulesoft.org/schema/mule/jetty/3.3/mule-jetty.xsd
        http://www.mulesoft.org/schema/mule/jetty-ssl http://www.mulesoft.org/schema/mule/jetty-ssl/3.3/mule-jetty-ssl.xsd
        http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/3.3/mule-file.xsd
        http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/3.3/mule-jersey.xsd
        http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/3.3/mule-cxf.xsd
        http://www.mulesoft.org/schema/mule/client http://www.mulesoft.org/schema/mule/client/3.3/mule-client.xsd
        http://www.mulesoft.org/schema/mule/management http://www.mulesoft.org/schema/mule/management/3.3/mule-management.xsd
        http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.3/mule-scripting.xsd
        http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/3.3/mule-xml.xsd
        http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/3.3/mule-json.xsd
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.3/mule-vm.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/3.3/mule-spring-security.xsd">

	<description>
		Authorization service
	</description>

	<spring:beans>
		<context:property-placeholder location="file:${conf.dir}/authorization-app.properties" />
		<spring:import resource="mule-security-config.xml" />
		<spring:bean class="com.rplp.icc.authorization.service.AuthServiceEndpoint"
			id="authServiceEndpoint" scope="prototype" />
	</spring:beans>

	<https:connector name="httpsConnector">
		<https:tls-key-store path="${MULE_HOME}/conf/keystore.jks"
			type="jks" keyPassword="${authorization.service.keystore.password}"
			storePassword="${authorization.service.keystore.password}" />
		<https:tls-server path="${MULE_HOME}/conf/truststore.jks"
			type="jks" storePassword="${authorization.service.truststore.password}" />
	</https:connector>


	<flow name="AuthorizationService" >
		<https:inbound-endpoint exchange-pattern="request-response" address="${authorization.service.inbound.address}"
			connector-ref="httpsConnector">
			<mule-ss:http-security-filter realm="mule-realm" />
		</https:inbound-endpoint>
		
		<custom-interceptor class="com.rplp.icc.authorization.interceptor.MDCLoggingInterceptor"/>
		<timer-interceptor/>
		
		<logger level="INFO" message="Request received from client: #[header:INBOUND:MULE_REMOTE_CLIENT_ADDRESS]"/>
		
		<jersey:resources>
			<component>
				<spring-object bean="authServiceEndpoint" />
			</component>
			<jersey:exception-mapper
				class="com.rplp.icc.authorization.service.AuthServiceExceptionMapper" />
		</jersey:resources>

		<custom-transformer class="com.rplp.icc.authorization.transformer.JerseyResponseToString"/>
		
		<!-- Remove security context to avoid serialization error. See class comment 
			for further details... -->
		<component>
			<singleton-object
				class="com.rplp.icc.authorization.transformer.SecurityContextRemover" />
		</component>
		
		<choice>
			<!--  
			If we don't have a String payload it means that there was
			an exception in the call due to unauthorized access. 
			-->
			<when expression="#[message.payload.getClass() == java.lang.String]">
				<flow-ref name="CallBronnoysundWS" />
			</when>
			<otherwise>
				<logger level="WARN" message="Unauthorized access" />
			</otherwise>
		</choice>

	</flow>

	<flow name="CallBronnoysundWS">
		
		<custom-interceptor class="com.rplp.icc.authorization.interceptor.MDCLoggingInterceptor"/>
		<timer-interceptor/>
		
		<object-to-string-transformer />
		<!-- Parameters for CXF client need to be an Object array -->
		<custom-transformer class="org.mule.transformer.simple.StringToObjectArray" />

		<https:outbound-endpoint address="${authorization.service.brreg.address}"
			connector-ref="httpsConnector">
			<cxf:jaxws-client clientClass="no.brreg.saksys.grunndata.ws.RolleService"
				port="RolleSoapPort" wsdlLocation="classpath:/wsdl/Rolleutskrift.wsdl"
				operation="hentRolle" />
					
		</https:outbound-endpoint>

		<!-- The response needs to be transformed to our json format -->
		<response>
			<custom-transformer
				class="com.rplp.icc.authorization.transformer.MeldingToPerson" />
			<json:object-to-json-transformer />
		</response>
		
	</flow>

</mule>
